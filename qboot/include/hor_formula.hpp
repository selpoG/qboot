#ifndef HOR_FORMULA_H
#define HOR_FORMULA_H

#include <array>
#include "matrix.hpp"
#include "real.hpp"

namespace qboot2
{
	void set_nonzero_spin_rec_coeffs(std::array<std::array<mpfr_t, 5>, 8>& a, const mpfr_t& epsilon, const mpfr_t& ell,
	                                 const mpfr_t& Delta, const mpfr_t& S, const mpfr_t& P, mpfr_prec_t prec,
	                                 mpfr_rnd_t rnd);
	void set_zero_spin_rec_coeffs(std::array<std::array<mpfr_t, 4>, 6>& a, const mpfr_t& epsilon, const mpfr_t& Delta,
	                              const mpfr_t& S, const mpfr_t& P, mpfr_prec_t prec, mpfr_rnd_t rnd);

	void initialize_spin_nonzero_coeffs_folder(std::array<std::array<mpfr_t, 5>, 8>& a, mpfr_prec_t prec);
	void initialize_spin_zero_coeffs_folder(std::array<std::array<mpfr_t, 4>, 6>& a, mpfr_prec_t prec);

	void deallocate_spin_nonzero_coeffs_folder(std::array<std::array<mpfr_t, 5>, 8>& a);
	void deallocate_spin_zero_coeffs_folder(std::array<std::array<mpfr_t, 4>, 6>& a);

	void spin_nonzero_evaluate_at_n(std::array<mpfr_t, 8>& a, std::array<std::array<mpfr_t, 5>, 8>& rho, long n,
	                                mpfr_prec_t prec, mpfr_rnd_t rnd);
	void spin_zero_evaluate_at_n(std::array<mpfr_t, 6>& a, std::array<std::array<mpfr_t, 4>, 6>& rho, long n,
	                             mpfr_rnd_t rnd);
}  // namespace qboot2

/*
 * Hogervorst-Osborn-Rycykov recursion relation takes the form
 *
 *  \sum_{i = 0}^{7} b[n - i] * a[i] (n, parameters (epsilon, spin, Delta, S, P)) =0
 *
 * and each coefficients a[i] is like
 *
 *  a[i][n, params] = a[i, 4] (params) * n ^ 4 + a[i, 3] (params) * n ^ 3 + ... + a[i, 0] (params)
 *
 * These parameters are multi-precision objects and we want to minimize the number of operations among them.
 * Our trick is to pre-compute a[i, j] (i = 0 to 7) (j = 0 to 4).
 * Since they do not include n, we can re-use them at every stage of recursion process
 * (that is, computation of next b[n]).
 *
 * The process for obtaining a[i, j] is implemented in
 * _get_nonzero_spin_rec_coeffs (for ell > 0)
 * and
 * _get_zero_spin_rec_coeffs
 *
 * */

namespace qboot
{
	template <class Real = mpfr::real<1000, MPFR_RNDN>>
	algebra::Matrix<Real> _get_nonzero_spin_rec_coeffs(const Real& epsilon, const Real& ell, const Real& Delta,
	                                                   const Real& S, const Real& P);

	template <class Real = mpfr::real<1000, MPFR_RNDN>>
	algebra::Matrix<Real> _get_zero_spin_rec_coeffs(const Real& epsilon, const Real& Delta, const Real& S,
	                                                const Real& P);

	template <class Real = mpfr::real<1000, MPFR_RNDN>>
	algebra::Matrix<Real> _get_rec_coeffs(const Real& epsilon, const Real& ell, const Real& Delta, const Real& S,
	                                      const Real& P)
	{
		if (ell == 0) return _get_zero_spin_rec_coeffs(epsilon, Delta, S, P);
		return _get_nonzero_spin_rec_coeffs(epsilon, ell, Delta, S, P);
	}

	template <class Real = mpfr::real<1000, MPFR_RNDN>>
	algebra::Vector<Real> _evaluate_at_n(const algebra::Matrix<Real>& rho, size_t n)
	{
		// v[i] = sum(rho[i, j] * pow(n, j), j)
		// j runs over {0, 1, 2} if ell == 0 else {0, 1, 2, 3}
		algebra::Vector<Real> v(rho.row());
		auto jmax = rho.row() / 2 - 1;
		for (size_t i = 0; i < rho.row(); i++)
		{
			v[i] = rho.get(i, rho.row() / 2);
			for (size_t j = 0; j <= jmax; j++) v[i] = v[i] * Real(n) + rho.get(i, jmax - j);
		}
		return v;
	}

	template <class Real>
	algebra::Matrix<Real> _get_zero_spin_rec_coeffs(const Real& epsilon, const Real& Delta, const Real& S,
	                                                const Real& P)
	{
		algebra::Matrix a(6, 4);
		Real _t_0, _t_1, _t_2, _t_3;
		// a[0, 0] = 0
		a.get(0, 0) = 0;
		_t_0 = -Delta;
		_t_2 = Delta - 1;
		_t_0 += epsilon;
		_t_1 = _t_2 * (-2);
		_t_0 += 1;
		// a[0, 1] = -2 * (Delta - 1) * (-Delta + epsilon + 1);
		a.get(0, 1) = _t_1 * _t_0;
		_t_0 = 3 * Delta;
		_t_1 = 2 * epsilon;
		_t_0 -= _t_1;
		// a[0, 2] = 3 * Delta - 2 * epsilon - 3;
		a.get(0, 2) = _t_0 - 3;
		// a[0, 3] = 1;
		a.get(0, 3) = 1;
		_t_0 = 4 * Delta;
		_t_0 *= S;
		_t_0 += Delta;
		_t_2 = 8 * S;
		_t_1 = Delta * (-2);
		_t_3 = 2 * epsilon;
		_t_0 -= _t_2;
		_t_2 = 4 * P;
		_t_1 += _t_3;
		_t_0 += _t_2;
		_t_1 += 3;
		_t_0 -= 2;
		a.get(1, 0) = _t_1 * _t_0;
		_t_0 = 2 * Delta;
		_t_1 = 24 * Delta;
		_t_0 *= Delta;
		_t_1 *= S;
		_t_2 = 2 * Delta;
		_t_0 -= _t_1;
		_t_2 *= epsilon;
		_t_0 -= _t_2;
		_t_1 = 10 * Delta;
		_t_2 = 16 * S;
		_t_0 -= _t_1;
		_t_2 *= epsilon;
		_t_0 += _t_2;
		_t_1 = 36 * S;
		_t_0 += _t_1;
		_t_1 = 8 * P;
		_t_0 -= _t_1;
		_t_1 = 6 * epsilon;
		_t_0 += _t_1;
		a.get(1, 1) = _t_0 + 11;
		_t_0 = 3 * Delta;
		_t_1 = 12 * S;
		_t_0 -= _t_1;
		_t_1 = 2 * epsilon;
		_t_0 -= _t_1;
		a.get(1, 2) = _t_0 - 6;
		a.get(1, 3) = 1;
		_t_0 = Delta * (-8);
		_t_1 = 4 * Delta;
		_t_0 *= Delta;
		_t_1 *= Delta;
		_t_0 *= S;
		_t_1 *= epsilon;
		_t_2 = 4 * Delta;
		_t_3 = 32 * Delta;
		_t_0 -= _t_1;
		_t_2 *= Delta;
		_t_3 *= S;
		_t_1 = 8 * Delta;
		_t_0 += _t_2;
		_t_3 *= S;
		_t_1 *= S;
		_t_0 += _t_3;
		_t_1 *= epsilon;
		_t_2 = 52 * Delta;
		_t_0 += _t_1;
		_t_2 *= S;
		_t_1 = 8 * Delta;
		_t_0 += _t_2;
		_t_1 *= P;
		_t_2 = 12 * Delta;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_0 += _t_2;
		_t_1 = 16 * Delta;
		_t_2 = 64 * S;
		_t_0 -= _t_1;
		_t_2 *= S;
		_t_1 = 32 * S;
		_t_0 -= _t_2;
		_t_1 *= P;
		_t_2 = 32 * S;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_0 -= _t_2;
		_t_1 = 72 * S;
		_t_2 = 24 * P;
		_t_0 -= _t_1;
		_t_2 *= epsilon;
		_t_0 -= _t_2;
		_t_1 = 12 * P;
		_t_0 -= _t_1;
		_t_1 = 8 * epsilon;
		_t_0 -= _t_1;
		a.get(2, 0) = _t_0 + 16;
		_t_0 = Delta * (-4);
		_t_1 = 24 * Delta;
		_t_0 *= Delta;
		_t_1 *= S;
		_t_2 = 4 * Delta;
		_t_0 -= _t_1;
		_t_2 *= epsilon;
		_t_0 -= _t_2;
		_t_1 = 20 * Delta;
		_t_2 = 32 * S;
		_t_0 += _t_1;
		_t_2 *= S;
		_t_1 = 16 * S;
		_t_0 += _t_2;
		_t_1 *= epsilon;
		_t_0 += _t_1;
		_t_1 = 60 * S;
		_t_0 += _t_1;
		_t_1 = 8 * P;
		_t_0 += _t_1;
		_t_1 = 4 * epsilon;
		_t_0 += _t_1;
		a.get(2, 1) = _t_0 - 24;
		_t_0 = Delta * (-6);
		_t_1 = 12 * S;
		_t_0 -= _t_1;
		a.get(2, 2) = _t_0 + 12;
		a.get(2, 3) = -2;
		_t_0 = 8 * Delta;
		_t_1 = 4 * Delta;
		_t_0 *= Delta;
		_t_1 *= Delta;
		_t_0 *= S;
		_t_1 *= epsilon;
		_t_2 = 8 * Delta;
		_t_3 = 32 * Delta;
		_t_0 -= _t_1;
		_t_2 *= Delta;
		_t_3 *= S;
		_t_1 = 24 * Delta;
		_t_0 += _t_2;
		_t_3 *= S;
		_t_1 *= S;
		_t_0 += _t_3;
		_t_1 *= epsilon;
		_t_2 = 52 * Delta;
		_t_0 += _t_1;
		_t_2 *= S;
		_t_1 = 8 * Delta;
		_t_0 -= _t_2;
		_t_1 *= P;
		_t_2 = 16 * Delta;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_0 += _t_2;
		_t_1 = 42 * Delta;
		_t_2 = 96 * S;
		_t_0 -= _t_1;
		_t_2 *= S;
		_t_1 = 32 * S;
		_t_0 -= _t_2;
		_t_1 *= P;
		_t_2 = 48 * S;
		_t_0 -= _t_1;
		_t_2 *= epsilon;
		_t_0 -= _t_2;
		_t_1 = 72 * S;
		_t_2 = 24 * P;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_0 += _t_2;
		_t_1 = 28 * P;
		_t_0 -= _t_1;
		_t_1 = 12 * epsilon;
		_t_0 -= _t_1;
		a.get(3, 0) = _t_0 + 54;
		_t_0 = Delta * (-4);
		_t_1 = 24 * Delta;
		_t_0 *= Delta;
		_t_1 *= S;
		_t_2 = 4 * Delta;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_0 -= _t_2;
		_t_1 = 32 * Delta;
		_t_2 = 32 * S;
		_t_0 += _t_1;
		_t_2 *= S;
		_t_1 = 16 * S;
		_t_0 += _t_2;
		_t_1 *= epsilon;
		_t_0 += _t_1;
		_t_1 = 60 * S;
		_t_0 -= _t_1;
		_t_1 = 8 * P;
		_t_0 += _t_1;
		_t_1 = 4 * epsilon;
		_t_0 += _t_1;
		a.get(3, 1) = _t_0 - 54;
		_t_0 = Delta * (-6);
		_t_1 = 12 * S;
		_t_0 += _t_1;
		a.get(3, 2) = _t_0 + 18;
		a.get(3, 3) = -2;
		_t_0 = 8 * Delta;
		_t_1 = 4 * Delta;
		_t_0 *= Delta;
		_t_1 *= Delta;
		_t_0 *= S;
		_t_1 *= epsilon;
		_t_2 = 4 * Delta;
		_t_3 = 24 * Delta;
		_t_0 += _t_1;
		_t_2 *= Delta;
		_t_3 *= S;
		_t_0 -= _t_2;
		_t_3 *= epsilon;
		_t_1 = 76 * Delta;
		_t_0 += _t_3;
		_t_1 *= S;
		_t_2 = 8 * Delta;
		_t_0 -= _t_1;
		_t_2 *= P;
		_t_1 = 20 * Delta;
		_t_0 -= _t_2;
		_t_1 *= epsilon;
		_t_0 -= _t_1;
		_t_1 = 20 * Delta;
		_t_2 = 64 * S;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_0 -= _t_2;
		_t_1 = 144 * S;
		_t_2 = 8 * P;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_0 -= _t_2;
		_t_1 = 28 * P;
		_t_0 += _t_1;
		_t_1 = 24 * epsilon;
		_t_0 += _t_1;
		a.get(4, 0) = _t_0 - 24;
		_t_0 = 2 * Delta;
		_t_1 = 24 * Delta;
		_t_0 *= Delta;
		_t_1 *= S;
		_t_2 = 6 * Delta;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_0 += _t_2;
		_t_1 = 16 * Delta;
		_t_2 = 16 * S;
		_t_0 -= _t_1;
		_t_2 *= epsilon;
		_t_0 += _t_2;
		_t_1 = 84 * S;
		_t_0 -= _t_1;
		_t_1 = 8 * P;
		_t_0 -= _t_1;
		_t_1 = 14 * epsilon;
		_t_0 -= _t_1;
		a.get(4, 1) = _t_0 + 26;
		_t_0 = 3 * Delta;
		_t_1 = 12 * S;
		_t_0 += _t_1;
		_t_1 = 2 * epsilon;
		_t_0 += _t_1;
		a.get(4, 2) = _t_0 - 9;
		a.get(4, 3) = 1;
		_t_0 = 2 * Delta;
		_t_1 = Delta - 4;
		_t_0 -= 5;
		_t_2 = 2 * epsilon;
		_t_0 = _t_1 * _t_0;
		_t_2 -= 3;
		a.get(5, 0) = _t_0 * _t_2;
		_t_0 = 2 * Delta;
		_t_1 = 6 * Delta;
		_t_0 *= Delta;
		_t_1 *= epsilon;
		_t_0 += _t_1;
		_t_1 = 22 * Delta;
		_t_0 -= _t_1;
		_t_1 = 18 * epsilon;
		_t_0 -= _t_1;
		a.get(5, 1) = _t_0 + 47;
		_t_0 = 3 * Delta;
		_t_1 = 2 * epsilon;
		_t_0 += _t_1;
		a.get(5, 2) = _t_0 - 12;
		a.get(5, 3) = 1;
		return a;
	}

	template <class Real>
	algebra::Matrix<Real> _get_nonzero_spin_rec_coeffs(const Real& epsilon, const Real& ell, const Real& Delta,
	                                                   const Real& S, const Real& P)
	{
		algebra::Matrix a(8, 5);
		Real _t_0, _t_1, _t_2, _t_3, _t_4;
		// a[0, 0] = 0;
		a.get(0, 0) = 0;
		_t_0 = -Delta;
		_t_0 += epsilon;
		_t_1 = -Delta;
		_t_0 += 1;
		_t_3 = Delta + ell;
		_t_1 += ell;
		_t_4 = 2 * epsilon;
		_t_0 *= -2;
		_t_3 -= 1;
		_t_1 += _t_4;
		_t_0 *= _t_3;
		_t_1 += 1;
		// a[0, 1] = -2 * (-Delta + epsilon + 1) * (Delta + ell - 1) * (-Delta + ell + 2 * epsilon + 1);
		a.get(0, 1) = _t_0 * _t_1;
		_t_0 = Delta * (-5);
		_t_1 = 10 * Delta;
		_t_0 *= Delta;
		_t_1 *= epsilon;
		_t_0 += _t_1;
		_t_1 = 10 * Delta;
		_t_0 += _t_1;
		_t_1 = ell * ell;
		_t_2 = 2 * ell;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_1 = 4 * epsilon;
		_t_0 += _t_2;
		_t_1 *= epsilon;
		_t_0 -= _t_1;
		_t_1 = 10 * epsilon;
		_t_0 -= _t_1;
		// a[0, 2] = -5 * mpfr::pow(Delta - epsilon - 1, 2) + mpfr::pow(ell + epsilon, 2);
		a.get(0, 2) = _t_0 - 5;
		a.get(0, 2) = -5 * mpfr::pow(Delta - epsilon - 1, 2) + mpfr::pow(ell + epsilon, 2);
		_t_0 = Delta * (-4);
		_t_1 = 4 * epsilon;
		_t_0 += _t_1;
		// a[0, 3] = 4 * (-Delta + epsilon + 1);
		a.get(0, 3) = _t_0 + 4;
		// a[0, 4] = -1;
		a.get(0, 4) = -1;
		_t_0 = Delta * (-4);
		_t_0 *= Delta;
		_t_1 = 8 * Delta;
		_t_0 *= S;
		_t_2 = Delta * Delta;
		_t_1 *= S;
		_t_0 -= _t_2;
		_t_1 *= epsilon;
		_t_2 = 16 * Delta;
		_t_0 += _t_1;
		_t_2 *= S;
		_t_1 = 4 * Delta;
		_t_0 += _t_2;
		_t_1 *= P;
		_t_2 = 2 * Delta;
		_t_0 -= _t_1;
		_t_2 *= epsilon;
		_t_1 = 4 * S;
		_t_0 += _t_2;
		_t_2 = 4 * Delta;
		_t_1 *= ell;
		_t_3 = 8 * S;
		_t_0 += _t_2;
		_t_1 *= ell;
		_t_3 *= ell;
		_t_0 += _t_1;
		_t_3 *= epsilon;
		_t_1 = 16 * S;
		_t_0 += _t_3;
		_t_1 *= epsilon;
		_t_0 -= _t_1;
		_t_1 = 16 * S;
		_t_2 = 8 * P;
		_t_0 -= _t_1;
		_t_2 *= epsilon;
		_t_0 += _t_2;
		_t_1 = 4 * P;
		_t_0 += _t_1;
		_t_1 = ell * ell;
		_t_2 = 2 * ell;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_3 = Delta * (-2);
		_t_1 = 2 * epsilon;
		_t_0 += _t_2;
		_t_2 = 4 * epsilon;
		_t_1 = _t_3 + _t_1;
		_t_0 -= _t_2;
		_t_1 += 3;
		_t_0 -= 4;
		a.get(1, 0) = _t_1 * _t_0;
		_t_0 = Delta * (-2);
		_t_1 = 40 * Delta;
		_t_0 *= Delta;
		_t_1 *= Delta;
		_t_2 = 6 * Delta;
		_t_0 *= Delta;
		_t_1 *= S;
		_t_2 *= Delta;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_1 = 16 * Delta;
		_t_3 = 80 * Delta;
		_t_0 += _t_2;
		_t_1 *= Delta;
		_t_3 *= S;
		_t_0 += _t_1;
		_t_3 *= epsilon;
		_t_1 = 128 * Delta;
		_t_0 -= _t_3;
		_t_1 *= S;
		_t_2 = 16 * Delta;
		_t_3 = 2 * Delta;
		_t_0 -= _t_1;
		_t_2 *= P;
		_t_3 *= ell;
		_t_1 = 4 * Delta;
		_t_0 += _t_2;
		_t_3 *= ell;
		_t_1 *= ell;
		_t_2 = 4 * Delta;
		_t_0 += _t_3;
		_t_1 *= epsilon;
		_t_2 *= epsilon;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_1 = 32 * Delta;
		_t_0 -= _t_2;
		_t_1 *= epsilon;
		_t_2 = 8 * S;
		_t_0 -= _t_1;
		_t_1 = 38 * Delta;
		_t_2 *= ell;
		_t_3 = 16 * S;
		_t_0 -= _t_1;
		_t_2 *= ell;
		_t_3 *= ell;
		_t_1 = 32 * S;
		_t_0 -= _t_2;
		_t_3 *= epsilon;
		_t_1 *= epsilon;
		_t_0 -= _t_3;
		_t_1 *= epsilon;
		_t_2 = 128 * S;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_0 += _t_2;
		_t_1 = 104 * S;
		_t_2 = 24 * P;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_1 = 2 * ell;
		_t_0 -= _t_2;
		_t_2 = 20 * P;
		_t_1 *= ell;
		_t_0 -= _t_2;
		_t_1 *= epsilon;
		_t_2 = 4 * ell;
		_t_3 = 4 * ell;
		_t_0 -= _t_1;
		_t_2 *= ell;
		_t_3 *= epsilon;
		_t_0 -= _t_2;
		_t_3 *= epsilon;
		_t_1 = 8 * ell;
		_t_0 -= _t_3;
		_t_1 *= epsilon;
		_t_2 = 12 * epsilon;
		_t_0 -= _t_1;
		_t_2 *= epsilon;
		_t_0 += _t_2;
		_t_1 = 38 * epsilon;
		_t_0 += _t_1;
		a.get(1, 1) = _t_0 + 28;
		_t_0 = Delta * (-5);
		_t_1 = 48 * Delta;
		_t_0 *= Delta;
		_t_1 *= S;
		_t_2 = 10 * Delta;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_0 += _t_2;
		_t_1 = 22 * Delta;
		_t_2 = 48 * S;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_0 -= _t_2;
		_t_1 = 72 * S;
		_t_0 -= _t_1;
		_t_1 = 8 * P;
		_t_0 += _t_1;
		_t_1 = ell * ell;
		_t_2 = 2 * ell;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_1 = 4 * epsilon;
		_t_0 += _t_2;
		_t_1 *= epsilon;
		_t_0 -= _t_1;
		_t_1 = 22 * epsilon;
		_t_0 -= _t_1;
		a.get(1, 2) = _t_0 - 23;
		_t_0 = Delta * (-4);
		_t_1 = 16 * S;
		_t_0 += _t_1;
		_t_1 = 4 * epsilon;
		_t_0 += _t_1;
		a.get(1, 3) = _t_0 + 8;
		a.get(1, 4) = -1;
		_t_0 = 8 * Delta;
		_t_1 = 4 * Delta;
		_t_0 *= Delta;
		_t_1 *= Delta;
		_t_0 *= Delta;
		_t_1 *= Delta;
		_t_2 = 8 * Delta;
		_t_3 = 64 * Delta;
		_t_0 *= S;
		_t_1 *= epsilon;
		_t_2 *= Delta;
		_t_3 *= Delta;
		_t_4 = 24 * Delta;
		_t_0 += _t_1;
		_t_2 *= Delta;
		_t_3 *= S;
		_t_4 *= Delta;
		_t_0 -= _t_2;
		_t_3 *= S;
		_t_4 *= S;
		_t_1 = 84 * Delta;
		_t_0 -= _t_3;
		_t_4 *= epsilon;
		_t_1 *= Delta;
		_t_2 = 8 * Delta;
		_t_3 = 8 * Delta;
		_t_0 -= _t_4;
		_t_1 *= S;
		_t_2 *= Delta;
		_t_3 *= Delta;
		_t_0 -= _t_1;
		_t_2 *= P;
		_t_3 *= epsilon;
		_t_1 = 12 * Delta;
		_t_0 -= _t_2;
		_t_3 *= epsilon;
		_t_1 *= Delta;
		_t_2 = 96 * Delta;
		_t_0 -= _t_3;
		_t_1 *= epsilon;
		_t_3 = 60 * Delta;
		_t_2 *= S;
		_t_0 -= _t_1;
		_t_3 *= Delta;
		_t_2 *= S;
		_t_1 = 304 * Delta;
		_t_0 += _t_3;
		_t_2 *= epsilon;
		_t_1 *= S;
		_t_3 = 64 * Delta;
		_t_4 = 8 * Delta;
		_t_0 += _t_2;
		_t_1 *= S;
		_t_3 *= S;
		_t_4 *= S;
		_t_2 = 16 * Delta;
		_t_0 += _t_1;
		_t_3 *= P;
		_t_4 *= ell;
		_t_2 *= S;
		_t_1 = 16 * Delta;
		_t_0 -= _t_3;
		_t_4 *= ell;
		_t_2 *= ell;
		_t_1 *= S;
		_t_0 -= _t_4;
		_t_2 *= epsilon;
		_t_1 *= epsilon;
		_t_3 = 168 * Delta;
		_t_0 -= _t_2;
		_t_1 *= epsilon;
		_t_3 *= S;
		_t_0 += _t_1;
		_t_3 *= epsilon;
		_t_1 = 256 * Delta;
		_t_2 = 40 * Delta;
		_t_0 += _t_3;
		_t_1 *= S;
		_t_2 *= P;
		_t_3 = 4 * Delta;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_1 = 12 * Delta;
		_t_3 *= ell;
		_t_0 += _t_2;
		_t_1 *= P;
		_t_3 *= ell;
		_t_2 = 8 * Delta;
		_t_4 = 8 * Delta;
		_t_0 += _t_1;
		_t_3 *= epsilon;
		_t_2 *= ell;
		_t_4 *= ell;
		_t_0 -= _t_3;
		_t_2 *= ell;
		_t_4 *= epsilon;
		_t_1 = 16 * Delta;
		_t_0 += _t_2;
		_t_4 *= epsilon;
		_t_1 *= ell;
		_t_2 = 32 * Delta;
		_t_0 -= _t_4;
		_t_1 *= epsilon;
		_t_2 *= epsilon;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_1 = 4 * Delta;
		_t_3 = 16 * S;
		_t_0 += _t_2;
		_t_1 *= epsilon;
		_t_3 *= S;
		_t_2 = 32 * S;
		_t_0 -= _t_1;
		_t_1 = 156 * Delta;
		_t_3 *= ell;
		_t_2 *= S;
		_t_0 -= _t_1;
		_t_3 *= ell;
		_t_2 *= ell;
		_t_1 = 256 * S;
		_t_0 += _t_3;
		_t_2 *= epsilon;
		_t_1 *= S;
		_t_0 += _t_2;
		_t_1 *= epsilon;
		_t_2 = 352 * S;
		_t_3 = 96 * S;
		_t_0 -= _t_1;
		_t_2 *= S;
		_t_3 *= P;
		_t_1 = 8 * S;
		_t_0 -= _t_2;
		_t_3 *= epsilon;
		_t_2 = 112 * S;
		_t_1 *= ell;
		_t_0 += _t_3;
		_t_2 *= P;
		_t_1 *= ell;
		_t_3 = 20 * S;
		_t_4 = 16 * S;
		_t_0 += _t_2;
		_t_1 *= epsilon;
		_t_3 *= ell;
		_t_4 *= ell;
		_t_0 += _t_1;
		_t_3 *= ell;
		_t_4 *= epsilon;
		_t_1 = 40 * S;
		_t_0 += _t_3;
		_t_4 *= epsilon;
		_t_1 *= ell;
		_t_2 = 64 * S;
		_t_0 += _t_4;
		_t_1 *= epsilon;
		_t_2 *= epsilon;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_1 = 256 * S;
		_t_0 -= _t_2;
		_t_1 *= epsilon;
		_t_2 = 48 * P;
		_t_0 -= _t_1;
		_t_1 = 240 * S;
		_t_2 *= epsilon;
		_t_0 -= _t_1;
		_t_2 *= epsilon;
		_t_1 = 40 * P;
		_t_0 -= _t_2;
		_t_1 *= epsilon;
		_t_2 = 4 * ell;
		_t_0 -= _t_1;
		_t_1 = 8 * P;
		_t_2 *= ell;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_1 = 16 * ell;
		_t_3 = 8 * ell;
		_t_0 += _t_2;
		_t_1 *= ell;
		_t_3 *= epsilon;
		_t_0 -= _t_1;
		_t_3 *= epsilon;
		_t_1 = 32 * ell;
		_t_0 += _t_3;
		_t_1 *= epsilon;
		_t_2 = 40 * epsilon;
		_t_0 -= _t_1;
		_t_2 *= epsilon;
		_t_0 -= _t_2;
		_t_1 = 36 * epsilon;
		_t_0 += _t_1;
		a.get(2, 0) = _t_0 + 136;
		_t_0 = 6 * Delta;
		_t_1 = 40 * Delta;
		_t_0 *= Delta;
		_t_1 *= Delta;
		_t_2 = 2 * Delta;
		_t_0 *= Delta;
		_t_1 *= S;
		_t_2 *= Delta;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_1 = 58 * Delta;
		_t_3 = 160 * Delta;
		_t_0 += _t_2;
		_t_1 *= Delta;
		_t_3 *= S;
		_t_2 = 80 * Delta;
		_t_0 -= _t_1;
		_t_3 *= S;
		_t_2 *= S;
		_t_0 -= _t_3;
		_t_2 *= epsilon;
		_t_1 = 224 * Delta;
		_t_0 -= _t_2;
		_t_1 *= S;
		_t_2 = 16 * Delta;
		_t_3 = 6 * Delta;
		_t_0 -= _t_1;
		_t_2 *= P;
		_t_3 *= ell;
		_t_1 = 12 * Delta;
		_t_0 -= _t_2;
		_t_3 *= ell;
		_t_1 *= ell;
		_t_2 = 12 * Delta;
		_t_0 -= _t_3;
		_t_1 *= epsilon;
		_t_2 *= epsilon;
		_t_0 -= _t_1;
		_t_2 *= epsilon;
		_t_1 = 12 * Delta;
		_t_0 -= _t_2;
		_t_1 *= epsilon;
		_t_2 = 128 * S;
		_t_0 += _t_1;
		_t_1 = 186 * Delta;
		_t_2 *= S;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_1 = 336 * S;
		_t_0 += _t_2;
		_t_1 *= S;
		_t_2 = 64 * S;
		_t_3 = 8 * S;
		_t_0 += _t_1;
		_t_2 *= P;
		_t_3 *= ell;
		_t_1 = 16 * S;
		_t_0 -= _t_2;
		_t_3 *= ell;
		_t_1 *= ell;
		_t_2 = 32 * S;
		_t_0 -= _t_3;
		_t_1 *= epsilon;
		_t_2 *= epsilon;
		_t_0 -= _t_1;
		_t_2 *= epsilon;
		_t_1 = 224 * S;
		_t_0 += _t_2;
		_t_1 *= epsilon;
		_t_0 += _t_1;
		_t_1 = 296 * S;
		_t_2 = 40 * P;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_1 = 2 * ell;
		_t_0 += _t_2;
		_t_2 = 12 * P;
		_t_1 *= ell;
		_t_0 += _t_2;
		_t_1 *= epsilon;
		_t_2 = 14 * ell;
		_t_3 = 4 * ell;
		_t_0 += _t_1;
		_t_2 *= ell;
		_t_3 *= epsilon;
		_t_0 += _t_2;
		_t_3 *= epsilon;
		_t_1 = 28 * ell;
		_t_0 += _t_3;
		_t_1 *= epsilon;
		_t_2 = 28 * epsilon;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_0 += _t_2;
		_t_1 = 46 * epsilon;
		_t_0 -= _t_1;
		a.get(2, 1) = _t_0 - 194;
		_t_0 = 15 * Delta;
		_t_1 = 48 * Delta;
		_t_0 *= Delta;
		_t_1 *= S;
		_t_2 = 6 * Delta;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_0 -= _t_2;
		_t_1 = 78 * Delta;
		_t_2 = 80 * S;
		_t_0 -= _t_1;
		_t_2 *= S;
		_t_1 = 48 * S;
		_t_0 -= _t_2;
		_t_1 *= epsilon;
		_t_0 -= _t_1;
		_t_1 = 120 * S;
		_t_0 -= _t_1;
		_t_1 = 8 * P;
		_t_2 = 3 * ell;
		_t_0 -= _t_1;
		_t_2 *= ell;
		_t_1 = 6 * ell;
		_t_0 -= _t_2;
		_t_1 *= epsilon;
		_t_2 = 4 * epsilon;
		_t_0 -= _t_1;
		_t_2 *= epsilon;
		_t_0 -= _t_2;
		_t_1 = 22 * epsilon;
		_t_0 += _t_1;
		a.get(2, 2) = _t_0 + 107;
		_t_0 = 12 * Delta;
		_t_1 = 16 * S;
		_t_0 += _t_1;
		_t_1 = 4 * epsilon;
		_t_0 -= _t_1;
		a.get(2, 3) = _t_0 - 28;
		a.get(2, 4) = 3;
		_t_0 = Delta * (-16);
		_t_1 = 4 * Delta;
		_t_0 *= Delta;
		_t_1 *= Delta;
		_t_0 *= Delta;
		_t_1 *= Delta;
		_t_2 = 14 * Delta;
		_t_3 = 64 * Delta;
		_t_0 *= S;
		_t_1 *= epsilon;
		_t_2 *= Delta;
		_t_3 *= Delta;
		_t_4 = 32 * Delta;
		_t_0 += _t_1;
		_t_2 *= Delta;
		_t_3 *= S;
		_t_4 *= Delta;
		_t_0 -= _t_2;
		_t_3 *= S;
		_t_4 *= S;
		_t_1 = 208 * Delta;
		_t_0 -= _t_3;
		_t_4 *= epsilon;
		_t_1 *= Delta;
		_t_2 = 16 * Delta;
		_t_3 = 8 * Delta;
		_t_0 -= _t_4;
		_t_1 *= S;
		_t_2 *= Delta;
		_t_3 *= Delta;
		_t_0 += _t_1;
		_t_2 *= P;
		_t_3 *= epsilon;
		_t_1 = 14 * Delta;
		_t_0 -= _t_2;
		_t_3 *= epsilon;
		_t_1 *= Delta;
		_t_2 = 128 * Delta;
		_t_0 -= _t_3;
		_t_1 *= epsilon;
		_t_3 = 133 * Delta;
		_t_2 *= S;
		_t_4 = 96 * Delta;
		_t_0 -= _t_1;
		_t_3 *= Delta;
		_t_2 *= S;
		_t_4 *= S;
		_t_0 += _t_3;
		_t_2 *= S;
		_t_4 *= S;
		_t_1 = 464 * Delta;
		_t_0 += _t_2;
		_t_4 *= epsilon;
		_t_1 *= S;
		_t_2 = 64 * Delta;
		_t_3 = 16 * Delta;
		_t_0 += _t_4;
		_t_1 *= S;
		_t_2 *= S;
		_t_3 *= S;
		_t_4 = 32 * Delta;
		_t_0 += _t_1;
		_t_2 *= P;
		_t_3 *= ell;
		_t_4 *= S;
		_t_1 = 64 * Delta;
		_t_0 += _t_2;
		_t_3 *= ell;
		_t_4 *= ell;
		_t_1 *= S;
		_t_0 += _t_3;
		_t_4 *= epsilon;
		_t_1 *= epsilon;
		_t_2 = 96 * Delta;
		_t_0 += _t_4;
		_t_1 *= epsilon;
		_t_2 *= S;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_1 = 816 * Delta;
		_t_3 = 16 * Delta;
		_t_0 += _t_2;
		_t_1 *= S;
		_t_3 *= P;
		_t_2 = 4 * Delta;
		_t_0 -= _t_1;
		_t_3 *= epsilon;
		_t_1 = 120 * Delta;
		_t_2 *= ell;
		_t_0 -= _t_3;
		_t_1 *= P;
		_t_2 *= ell;
		_t_3 = 14 * Delta;
		_t_4 = 8 * Delta;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_3 *= ell;
		_t_4 *= ell;
		_t_0 -= _t_2;
		_t_3 *= ell;
		_t_4 *= epsilon;
		_t_1 = 28 * Delta;
		_t_0 += _t_3;
		_t_4 *= epsilon;
		_t_1 *= ell;
		_t_2 = 44 * Delta;
		_t_0 -= _t_4;
		_t_1 *= epsilon;
		_t_2 *= epsilon;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_1 = 22 * Delta;
		_t_0 += _t_2;
		_t_1 *= epsilon;
		_t_2 = 384 * S;
		_t_0 -= _t_1;
		_t_1 = 432 * Delta;
		_t_2 *= S;
		_t_3 = 128 * S;
		_t_4 = 16 * S;
		_t_0 -= _t_1;
		_t_2 *= S;
		_t_3 *= S;
		_t_4 *= S;
		_t_1 = 32 * S;
		_t_0 -= _t_2;
		_t_3 *= P;
		_t_4 *= ell;
		_t_1 *= S;
		_t_0 += _t_3;
		_t_4 *= ell;
		_t_1 *= ell;
		_t_2 = 384 * S;
		_t_0 += _t_4;
		_t_1 *= epsilon;
		_t_2 *= S;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_1 = 768 * S;
		_t_3 = 160 * S;
		_t_0 -= _t_2;
		_t_1 *= S;
		_t_3 *= P;
		_t_0 -= _t_1;
		_t_3 *= epsilon;
		_t_1 = 80 * S;
		_t_2 = 48 * S;
		_t_0 -= _t_3;
		_t_1 *= P;
		_t_2 *= ell;
		_t_3 = 96 * S;
		_t_0 -= _t_1;
		_t_2 *= ell;
		_t_3 *= ell;
		_t_1 = 192 * S;
		_t_0 -= _t_2;
		_t_3 *= epsilon;
		_t_1 *= epsilon;
		_t_0 -= _t_3;
		_t_1 *= epsilon;
		_t_2 = 64 * P;
		_t_0 -= _t_1;
		_t_1 = 1008 * S;
		_t_2 *= epsilon;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_1 = 48 * P;
		_t_0 += _t_2;
		_t_1 *= epsilon;
		_t_2 = 2 * ell;
		_t_0 -= _t_1;
		_t_1 = 216 * P;
		_t_2 *= ell;
		_t_0 -= _t_1;
		_t_2 *= epsilon;
		_t_1 = 33 * ell;
		_t_3 = 4 * ell;
		_t_0 += _t_2;
		_t_1 *= ell;
		_t_3 *= epsilon;
		_t_0 -= _t_1;
		_t_3 *= epsilon;
		_t_1 = 66 * ell;
		_t_0 += _t_3;
		_t_1 *= epsilon;
		_t_2 = 72 * epsilon;
		_t_0 -= _t_1;
		_t_2 *= epsilon;
		_t_0 -= _t_2;
		_t_1 = 108 * epsilon;
		_t_0 += _t_1;
		a.get(3, 0) = _t_0 + 468;
		_t_0 = 6 * Delta;
		_t_1 = 80 * Delta;
		_t_0 *= Delta;
		_t_1 *= Delta;
		_t_2 = 2 * Delta;
		_t_0 *= Delta;
		_t_1 *= S;
		_t_2 *= Delta;
		_t_0 -= _t_1;
		_t_2 *= epsilon;
		_t_1 = 88 * Delta;
		_t_3 = 160 * Delta;
		_t_0 += _t_2;
		_t_1 *= Delta;
		_t_3 *= S;
		_t_2 = 32 * Delta;
		_t_0 -= _t_1;
		_t_3 *= S;
		_t_2 *= S;
		_t_0 -= _t_3;
		_t_2 *= epsilon;
		_t_1 = 544 * Delta;
		_t_0 -= _t_2;
		_t_1 *= S;
		_t_2 = 32 * Delta;
		_t_3 = 6 * Delta;
		_t_0 += _t_1;
		_t_2 *= P;
		_t_3 *= ell;
		_t_1 = 12 * Delta;
		_t_0 -= _t_2;
		_t_3 *= ell;
		_t_1 *= ell;
		_t_2 = 12 * Delta;
		_t_0 -= _t_3;
		_t_1 *= epsilon;
		_t_2 *= epsilon;
		_t_0 -= _t_1;
		_t_2 *= epsilon;
		_t_1 = 24 * Delta;
		_t_0 -= _t_2;
		_t_1 *= epsilon;
		_t_2 = 128 * S;
		_t_0 += _t_1;
		_t_1 = 378 * Delta;
		_t_2 *= S;
		_t_3 = 128 * S;
		_t_0 += _t_1;
		_t_2 *= S;
		_t_3 *= S;
		_t_0 += _t_2;
		_t_3 *= epsilon;
		_t_1 = 496 * S;
		_t_0 += _t_3;
		_t_1 *= S;
		_t_2 = 64 * S;
		_t_3 = 16 * S;
		_t_0 += _t_1;
		_t_2 *= P;
		_t_3 *= ell;
		_t_1 = 32 * S;
		_t_0 += _t_2;
		_t_3 *= ell;
		_t_1 *= ell;
		_t_2 = 64 * S;
		_t_0 += _t_3;
		_t_1 *= epsilon;
		_t_2 *= epsilon;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_0 += _t_2;
		_t_1 = 912 * S;
		_t_2 = 16 * P;
		_t_0 -= _t_1;
		_t_2 *= epsilon;
		_t_1 = 2 * ell;
		_t_0 -= _t_2;
		_t_2 = 120 * P;
		_t_1 *= ell;
		_t_0 += _t_2;
		_t_1 *= epsilon;
		_t_2 = 20 * ell;
		_t_3 = 4 * ell;
		_t_0 += _t_1;
		_t_2 *= ell;
		_t_3 *= epsilon;
		_t_0 += _t_2;
		_t_3 *= epsilon;
		_t_1 = 40 * ell;
		_t_0 += _t_3;
		_t_1 *= epsilon;
		_t_2 = 36 * epsilon;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_0 += _t_2;
		_t_1 = 102 * epsilon;
		_t_0 -= _t_1;
		a.get(3, 1) = _t_0 - 504;
		_t_0 = 15 * Delta;
		_t_1 = 96 * Delta;
		_t_0 *= Delta;
		_t_1 *= S;
		_t_2 = 6 * Delta;
		_t_0 -= _t_1;
		_t_2 *= epsilon;
		_t_0 -= _t_2;
		_t_1 = 114 * Delta;
		_t_2 = 80 * S;
		_t_0 -= _t_1;
		_t_2 *= S;
		_t_0 -= _t_2;
		_t_1 = 288 * S;
		_t_0 += _t_1;
		_t_1 = 16 * P;
		_t_2 = 3 * ell;
		_t_0 -= _t_1;
		_t_2 *= ell;
		_t_1 = 6 * ell;
		_t_0 -= _t_2;
		_t_1 *= epsilon;
		_t_2 = 4 * epsilon;
		_t_0 -= _t_1;
		_t_2 *= epsilon;
		_t_0 -= _t_2;
		_t_1 = 34 * epsilon;
		_t_0 += _t_1;
		a.get(3, 2) = _t_0 + 209;
		_t_0 = 12 * Delta;
		_t_1 = 32 * S;
		_t_0 -= _t_1;
		_t_1 = 4 * epsilon;
		_t_0 -= _t_1;
		a.get(3, 3) = _t_0 - 40;
		a.get(3, 4) = 3;
		_t_0 = Delta * (-16);
		_t_1 = 8 * Delta;
		_t_0 *= Delta;
		_t_1 *= Delta;
		_t_0 *= Delta;
		_t_1 *= Delta;
		_t_2 = 16 * Delta;
		_t_3 = 64 * Delta;
		_t_0 *= S;
		_t_1 *= epsilon;
		_t_2 *= Delta;
		_t_3 *= Delta;
		_t_4 = 32 * Delta;
		_t_0 -= _t_1;
		_t_2 *= Delta;
		_t_3 *= S;
		_t_4 *= Delta;
		_t_0 += _t_2;
		_t_3 *= S;
		_t_4 *= S;
		_t_1 = 288 * Delta;
		_t_0 += _t_3;
		_t_4 *= epsilon;
		_t_1 *= Delta;
		_t_2 = 16 * Delta;
		_t_0 -= _t_4;
		_t_1 *= S;
		_t_2 *= Delta;
		_t_3 = 80 * Delta;
		_t_0 += _t_1;
		_t_2 *= P;
		_t_3 *= Delta;
		_t_1 = 128 * Delta;
		_t_0 += _t_2;
		_t_3 *= epsilon;
		_t_2 = 164 * Delta;
		_t_1 *= S;
		_t_4 = 160 * Delta;
		_t_0 += _t_3;
		_t_2 *= Delta;
		_t_1 *= S;
		_t_4 *= S;
		_t_0 -= _t_2;
		_t_1 *= S;
		_t_4 *= S;
		_t_2 = 592 * Delta;
		_t_0 += _t_1;
		_t_4 *= epsilon;
		_t_2 *= S;
		_t_1 = 64 * Delta;
		_t_3 = 16 * Delta;
		_t_0 += _t_4;
		_t_2 *= S;
		_t_1 *= S;
		_t_3 *= S;
		_t_4 = 32 * Delta;
		_t_0 -= _t_2;
		_t_1 *= P;
		_t_3 *= ell;
		_t_4 *= S;
		_t_2 = 64 * Delta;
		_t_0 += _t_1;
		_t_3 *= ell;
		_t_4 *= ell;
		_t_2 *= S;
		_t_0 += _t_3;
		_t_4 *= epsilon;
		_t_2 *= epsilon;
		_t_1 = 128 * Delta;
		_t_0 += _t_4;
		_t_2 *= epsilon;
		_t_1 *= S;
		_t_0 += _t_2;
		_t_1 *= epsilon;
		_t_2 = 1456 * Delta;
		_t_3 = 16 * Delta;
		_t_0 += _t_1;
		_t_2 *= S;
		_t_3 *= P;
		_t_1 = 8 * Delta;
		_t_0 -= _t_2;
		_t_3 *= epsilon;
		_t_2 = 104 * Delta;
		_t_1 *= ell;
		_t_0 -= _t_3;
		_t_2 *= P;
		_t_1 *= ell;
		_t_3 = 16 * Delta;
		_t_4 = 16 * Delta;
		_t_0 -= _t_2;
		_t_1 *= epsilon;
		_t_3 *= ell;
		_t_4 *= ell;
		_t_0 += _t_1;
		_t_3 *= ell;
		_t_4 *= epsilon;
		_t_1 = 32 * Delta;
		_t_0 -= _t_3;
		_t_4 *= epsilon;
		_t_1 *= ell;
		_t_0 += _t_4;
		_t_1 *= epsilon;
		_t_2 = 280 * Delta;
		_t_0 -= _t_1;
		_t_2 *= epsilon;
		_t_1 = 512 * S;
		_t_0 -= _t_2;
		_t_2 = 572 * Delta;
		_t_1 *= S;
		_t_3 = 128 * S;
		_t_4 = 16 * S;
		_t_0 += _t_2;
		_t_1 *= S;
		_t_3 *= S;
		_t_4 *= S;
		_t_2 = 32 * S;
		_t_0 -= _t_1;
		_t_3 *= P;
		_t_4 *= ell;
		_t_2 *= S;
		_t_0 -= _t_3;
		_t_4 *= ell;
		_t_2 *= ell;
		_t_1 = 512 * S;
		_t_0 -= _t_4;
		_t_2 *= epsilon;
		_t_1 *= S;
		_t_0 -= _t_2;
		_t_1 *= epsilon;
		_t_2 = 1216 * S;
		_t_3 = 160 * S;
		_t_0 -= _t_1;
		_t_2 *= S;
		_t_3 *= P;
		_t_0 += _t_2;
		_t_3 *= epsilon;
		_t_1 = 368 * S;
		_t_2 = 64 * S;
		_t_0 += _t_3;
		_t_1 *= P;
		_t_2 *= ell;
		_t_3 = 128 * S;
		_t_0 -= _t_1;
		_t_2 *= ell;
		_t_3 *= ell;
		_t_1 = 256 * S;
		_t_0 -= _t_2;
		_t_3 *= epsilon;
		_t_1 *= epsilon;
		_t_0 -= _t_3;
		_t_1 *= epsilon;
		_t_2 = 64 * P;
		_t_0 -= _t_1;
		_t_1 = 2240 * S;
		_t_2 *= epsilon;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_1 = 160 * P;
		_t_0 -= _t_2;
		_t_1 *= epsilon;
		_t_2 = 16 * ell;
		_t_0 += _t_1;
		_t_1 = 160 * P;
		_t_2 *= ell;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_1 = 40 * ell;
		_t_3 = 32 * ell;
		_t_0 -= _t_2;
		_t_1 *= ell;
		_t_3 *= epsilon;
		_t_0 += _t_1;
		_t_3 *= epsilon;
		_t_1 = 80 * ell;
		_t_0 -= _t_3;
		_t_1 *= epsilon;
		_t_2 = 16 * epsilon;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_0 += _t_2;
		_t_1 = 312 * epsilon;
		_t_0 += _t_1;
		a.get(4, 0) = _t_0 - 664;
		_t_0 = Delta * (-6);
		_t_1 = 80 * Delta;
		_t_0 *= Delta;
		_t_1 *= Delta;
		_t_2 = 22 * Delta;
		_t_0 *= Delta;
		_t_1 *= S;
		_t_2 *= Delta;
		_t_0 -= _t_1;
		_t_2 *= epsilon;
		_t_1 = 98 * Delta;
		_t_3 = 160 * Delta;
		_t_0 -= _t_2;
		_t_1 *= Delta;
		_t_3 *= S;
		_t_2 = 32 * Delta;
		_t_0 += _t_1;
		_t_3 *= S;
		_t_2 *= S;
		_t_0 += _t_3;
		_t_2 *= epsilon;
		_t_1 = 736 * Delta;
		_t_0 -= _t_2;
		_t_1 *= S;
		_t_2 = 32 * Delta;
		_t_3 = 6 * Delta;
		_t_0 += _t_1;
		_t_2 *= P;
		_t_3 *= ell;
		_t_1 = 12 * Delta;
		_t_0 += _t_2;
		_t_3 *= ell;
		_t_1 *= ell;
		_t_2 = 4 * Delta;
		_t_0 += _t_3;
		_t_1 *= epsilon;
		_t_2 *= epsilon;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_1 = 140 * Delta;
		_t_0 += _t_2;
		_t_1 *= epsilon;
		_t_2 = 128 * S;
		_t_0 += _t_1;
		_t_1 = 458 * Delta;
		_t_2 *= S;
		_t_3 = 128 * S;
		_t_0 -= _t_1;
		_t_2 *= S;
		_t_3 *= S;
		_t_0 += _t_2;
		_t_3 *= epsilon;
		_t_1 = 624 * S;
		_t_0 += _t_3;
		_t_1 *= S;
		_t_2 = 64 * S;
		_t_3 = 16 * S;
		_t_0 -= _t_1;
		_t_2 *= P;
		_t_3 *= ell;
		_t_1 = 32 * S;
		_t_0 += _t_2;
		_t_3 *= ell;
		_t_1 *= ell;
		_t_2 = 64 * S;
		_t_0 += _t_3;
		_t_1 *= epsilon;
		_t_2 *= epsilon;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_0 += _t_2;
		_t_1 = 1584 * S;
		_t_2 = 16 * P;
		_t_0 -= _t_1;
		_t_2 *= epsilon;
		_t_1 = 2 * ell;
		_t_0 -= _t_2;
		_t_2 = 104 * P;
		_t_1 *= ell;
		_t_0 -= _t_2;
		_t_1 *= epsilon;
		_t_2 = 22 * ell;
		_t_3 = 4 * ell;
		_t_0 += _t_1;
		_t_2 *= ell;
		_t_3 *= epsilon;
		_t_0 -= _t_2;
		_t_3 *= epsilon;
		_t_1 = 44 * ell;
		_t_0 += _t_3;
		_t_1 *= epsilon;
		_t_2 = 20 * epsilon;
		_t_0 -= _t_1;
		_t_2 *= epsilon;
		_t_0 -= _t_2;
		_t_1 = 214 * epsilon;
		_t_0 -= _t_1;
		a.get(4, 1) = _t_0 + 658;
		_t_0 = Delta * (-15);
		_t_1 = 96 * Delta;
		_t_0 *= Delta;
		_t_1 *= S;
		_t_2 = 18 * Delta;
		_t_0 -= _t_1;
		_t_2 *= epsilon;
		_t_0 -= _t_2;
		_t_1 = 126 * Delta;
		_t_2 = 80 * S;
		_t_0 += _t_1;
		_t_2 *= S;
		_t_0 += _t_2;
		_t_1 = 384 * S;
		_t_0 += _t_1;
		_t_1 = 16 * P;
		_t_2 = 3 * ell;
		_t_0 += _t_1;
		_t_2 *= ell;
		_t_1 = 6 * ell;
		_t_0 += _t_2;
		_t_1 *= epsilon;
		_t_2 = 4 * epsilon;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_0 += _t_2;
		_t_1 = 50 * epsilon;
		_t_0 += _t_1;
		a.get(4, 2) = _t_0 - 251;
		_t_0 = Delta * (-12);
		_t_1 = 32 * S;
		_t_0 -= _t_1;
		_t_1 = 4 * epsilon;
		_t_0 -= _t_1;
		a.get(4, 3) = _t_0 + 44;
		a.get(4, 4) = -3;
		_t_0 = 8 * Delta;
		_t_1 = 8 * Delta;
		_t_0 *= Delta;
		_t_1 *= Delta;
		_t_0 *= Delta;
		_t_1 *= Delta;
		_t_2 = 22 * Delta;
		_t_3 = 64 * Delta;
		_t_0 *= S;
		_t_1 *= epsilon;
		_t_2 *= Delta;
		_t_3 *= Delta;
		_t_4 = 56 * Delta;
		_t_0 -= _t_1;
		_t_2 *= Delta;
		_t_3 *= S;
		_t_4 *= Delta;
		_t_0 += _t_2;
		_t_3 *= S;
		_t_4 *= S;
		_t_1 = 164 * Delta;
		_t_0 += _t_3;
		_t_4 *= epsilon;
		_t_1 *= Delta;
		_t_2 = 8 * Delta;
		_t_0 += _t_4;
		_t_1 *= S;
		_t_2 *= Delta;
		_t_3 = 102 * Delta;
		_t_0 -= _t_1;
		_t_2 *= P;
		_t_3 *= Delta;
		_t_1 = 160 * Delta;
		_t_0 += _t_2;
		_t_3 *= epsilon;
		_t_2 = 277 * Delta;
		_t_1 *= S;
		_t_0 += _t_3;
		_t_2 *= Delta;
		_t_1 *= S;
		_t_3 = 752 * Delta;
		_t_0 -= _t_2;
		_t_1 *= epsilon;
		_t_3 *= S;
		_t_2 = 64 * Delta;
		_t_4 = 8 * Delta;
		_t_0 += _t_1;
		_t_3 *= S;
		_t_2 *= S;
		_t_4 *= S;
		_t_1 = 16 * Delta;
		_t_0 -= _t_3;
		_t_2 *= P;
		_t_4 *= ell;
		_t_1 *= S;
		_t_3 = 48 * Delta;
		_t_0 -= _t_2;
		_t_4 *= ell;
		_t_1 *= ell;
		_t_3 *= S;
		_t_0 -= _t_4;
		_t_1 *= epsilon;
		_t_3 *= epsilon;
		_t_2 = 504 * Delta;
		_t_0 -= _t_1;
		_t_3 *= epsilon;
		_t_2 *= S;
		_t_0 += _t_3;
		_t_2 *= epsilon;
		_t_1 = 896 * Delta;
		_t_3 = 40 * Delta;
		_t_0 -= _t_2;
		_t_1 *= S;
		_t_3 *= P;
		_t_2 = 8 * Delta;
		_t_0 += _t_1;
		_t_3 *= epsilon;
		_t_1 = 100 * Delta;
		_t_2 *= ell;
		_t_0 += _t_3;
		_t_1 *= P;
		_t_2 *= ell;
		_t_3 = 22 * Delta;
		_t_4 = 16 * Delta;
		_t_0 -= _t_1;
		_t_2 *= epsilon;
		_t_3 *= ell;
		_t_4 *= ell;
		_t_0 += _t_2;
		_t_3 *= ell;
		_t_4 *= epsilon;
		_t_1 = 44 * Delta;
		_t_0 -= _t_3;
		_t_4 *= epsilon;
		_t_1 *= ell;
		_t_2 = 4 * Delta;
		_t_0 += _t_4;
		_t_1 *= epsilon;
		_t_2 *= epsilon;
		_t_0 -= _t_1;
		_t_2 *= epsilon;
		_t_1 = 438 * Delta;
		_t_3 = 16 * S;
		_t_0 -= _t_2;
		_t_1 *= epsilon;
		_t_3 *= S;
		_t_2 = 32 * S;
		_t_0 -= _t_1;
		_t_1 = 1168 * Delta;
		_t_3 *= ell;
		_t_2 *= S;
		_t_0 += _t_1;
		_t_3 *= ell;
		_t_2 *= ell;
		_t_1 = 640 * S;
		_t_0 -= _t_3;
		_t_2 *= epsilon;
		_t_1 *= S;
		_t_0 -= _t_2;
		_t_1 *= epsilon;
		_t_2 = 1920 * S;
		_t_3 = 96 * S;
		_t_0 -= _t_1;
		_t_2 *= S;
		_t_3 *= P;
		_t_1 = 8 * S;
		_t_0 += _t_2;
		_t_3 *= epsilon;
		_t_2 = 336 * S;
		_t_1 *= ell;
		_t_0 -= _t_3;
		_t_2 *= P;
		_t_1 *= ell;
		_t_3 = 36 * S;
		_t_4 = 16 * S;
		_t_0 += _t_2;
		_t_1 *= epsilon;
		_t_3 *= ell;
		_t_4 *= ell;
		_t_0 -= _t_1;
		_t_3 *= ell;
		_t_4 *= epsilon;
		_t_1 = 72 * S;
		_t_0 += _t_3;
		_t_4 *= epsilon;
		_t_1 *= ell;
		_t_2 = 160 * S;
		_t_0 -= _t_4;
		_t_1 *= epsilon;
		_t_2 *= epsilon;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_1 = 1040 * S;
		_t_0 -= _t_2;
		_t_1 *= epsilon;
		_t_2 = 48 * P;
		_t_0 += _t_1;
		_t_1 = 1440 * S;
		_t_2 *= epsilon;
		_t_0 -= _t_1;
		_t_2 *= epsilon;
		_t_1 = 240 * P;
		_t_0 += _t_2;
		_t_1 *= epsilon;
		_t_2 = 18 * ell;
		_t_0 -= _t_1;
		_t_1 = 300 * P;
		_t_2 *= ell;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_1 = 65 * ell;
		_t_3 = 36 * ell;
		_t_0 -= _t_2;
		_t_1 *= ell;
		_t_3 *= epsilon;
		_t_0 += _t_1;
		_t_3 *= epsilon;
		_t_1 = 130 * ell;
		_t_0 -= _t_3;
		_t_1 *= epsilon;
		_t_2 = 40 * epsilon;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_0 += _t_2;
		_t_1 = 580 * epsilon;
		_t_0 += _t_1;
		a.get(5, 0) = _t_0 - 1620;
		_t_0 = Delta * (-6);
		_t_1 = 40 * Delta;
		_t_0 *= Delta;
		_t_1 *= Delta;
		_t_2 = 22 * Delta;
		_t_0 *= Delta;
		_t_1 *= S;
		_t_2 *= Delta;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_1 = 128 * Delta;
		_t_3 = 160 * Delta;
		_t_0 -= _t_2;
		_t_1 *= Delta;
		_t_3 *= S;
		_t_2 = 112 * Delta;
		_t_0 += _t_1;
		_t_3 *= S;
		_t_2 *= S;
		_t_0 += _t_3;
		_t_2 *= epsilon;
		_t_1 = 416 * Delta;
		_t_0 += _t_2;
		_t_1 *= S;
		_t_2 = 16 * Delta;
		_t_3 = 6 * Delta;
		_t_0 -= _t_1;
		_t_2 *= P;
		_t_3 *= ell;
		_t_1 = 12 * Delta;
		_t_0 += _t_2;
		_t_3 *= ell;
		_t_1 *= ell;
		_t_2 = 4 * Delta;
		_t_0 += _t_3;
		_t_1 *= epsilon;
		_t_2 *= epsilon;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_1 = 176 * Delta;
		_t_0 += _t_2;
		_t_1 *= epsilon;
		_t_2 = 128 * S;
		_t_0 += _t_1;
		_t_1 = 746 * Delta;
		_t_2 *= S;
		_t_0 -= _t_1;
		_t_2 *= epsilon;
		_t_1 = 784 * S;
		_t_0 += _t_2;
		_t_1 *= S;
		_t_2 = 64 * S;
		_t_3 = 8 * S;
		_t_0 -= _t_1;
		_t_2 *= P;
		_t_3 *= ell;
		_t_1 = 16 * S;
		_t_0 -= _t_2;
		_t_3 *= ell;
		_t_1 *= ell;
		_t_2 = 32 * S;
		_t_0 -= _t_3;
		_t_1 *= epsilon;
		_t_2 *= epsilon;
		_t_0 -= _t_1;
		_t_2 *= epsilon;
		_t_1 = 448 * S;
		_t_0 += _t_2;
		_t_1 *= epsilon;
		_t_0 -= _t_1;
		_t_1 = 968 * S;
		_t_2 = 40 * P;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_1 = 2 * ell;
		_t_0 += _t_2;
		_t_2 = 100 * P;
		_t_1 *= ell;
		_t_0 -= _t_2;
		_t_1 *= epsilon;
		_t_2 = 28 * ell;
		_t_3 = 4 * ell;
		_t_0 += _t_1;
		_t_2 *= ell;
		_t_3 *= epsilon;
		_t_0 -= _t_2;
		_t_3 *= epsilon;
		_t_1 = 56 * ell;
		_t_0 += _t_3;
		_t_1 *= epsilon;
		_t_2 = 28 * epsilon;
		_t_0 -= _t_1;
		_t_2 *= epsilon;
		_t_0 -= _t_2;
		_t_1 = 326 * epsilon;
		_t_0 -= _t_1;
		a.get(5, 1) = _t_0 + 1304;
		_t_0 = Delta * (-15);
		_t_1 = 48 * Delta;
		_t_0 *= Delta;
		_t_1 *= S;
		_t_2 = 18 * Delta;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_0 -= _t_2;
		_t_1 = 162 * Delta;
		_t_2 = 80 * S;
		_t_0 += _t_1;
		_t_2 *= S;
		_t_1 = 48 * S;
		_t_0 += _t_2;
		_t_1 *= epsilon;
		_t_0 += _t_1;
		_t_1 = 216 * S;
		_t_0 -= _t_1;
		_t_1 = 8 * P;
		_t_2 = 3 * ell;
		_t_0 += _t_1;
		_t_2 *= ell;
		_t_1 = 6 * ell;
		_t_0 += _t_2;
		_t_1 *= epsilon;
		_t_2 = 4 * epsilon;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_0 += _t_2;
		_t_1 = 62 * epsilon;
		_t_0 += _t_1;
		a.get(5, 2) = _t_0 - 401;
		_t_0 = Delta * (-12);
		_t_1 = 16 * S;
		_t_0 += _t_1;
		_t_1 = 4 * epsilon;
		_t_0 -= _t_1;
		a.get(5, 3) = _t_0 + 56;
		a.get(5, 4) = -3;
		_t_0 = 8 * Delta;
		_t_1 = 4 * Delta;
		_t_0 *= Delta;
		_t_1 *= Delta;
		_t_0 *= Delta;
		_t_1 *= Delta;
		_t_2 = 8 * Delta;
		_t_3 = 56 * Delta;
		_t_0 *= S;
		_t_1 *= epsilon;
		_t_2 *= Delta;
		_t_3 *= Delta;
		_t_0 += _t_1;
		_t_2 *= Delta;
		_t_3 *= S;
		_t_1 = 204 * Delta;
		_t_0 -= _t_2;
		_t_3 *= epsilon;
		_t_1 *= Delta;
		_t_2 = 8 * Delta;
		_t_4 = 8 * Delta;
		_t_0 += _t_3;
		_t_1 *= S;
		_t_2 *= Delta;
		_t_4 *= Delta;
		_t_0 -= _t_1;
		_t_2 *= P;
		_t_4 *= epsilon;
		_t_1 = 68 * Delta;
		_t_0 -= _t_2;
		_t_4 *= epsilon;
		_t_1 *= Delta;
		_t_2 = 8 * Delta;
		_t_0 += _t_4;
		_t_1 *= epsilon;
		_t_3 = 104 * Delta;
		_t_2 *= S;
		_t_4 = 16 * Delta;
		_t_0 -= _t_1;
		_t_3 *= Delta;
		_t_2 *= ell;
		_t_4 *= S;
		_t_1 = 48 * Delta;
		_t_0 += _t_3;
		_t_2 *= ell;
		_t_4 *= ell;
		_t_1 *= S;
		_t_0 -= _t_2;
		_t_4 *= epsilon;
		_t_1 *= epsilon;
		_t_2 = 616 * Delta;
		_t_0 -= _t_4;
		_t_1 *= epsilon;
		_t_2 *= S;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_1 = 1360 * Delta;
		_t_3 = 24 * Delta;
		_t_0 -= _t_2;
		_t_1 *= S;
		_t_3 *= P;
		_t_2 = 4 * Delta;
		_t_0 += _t_1;
		_t_3 *= epsilon;
		_t_1 = 92 * Delta;
		_t_2 *= ell;
		_t_0 -= _t_3;
		_t_1 *= P;
		_t_2 *= ell;
		_t_3 = 8 * Delta;
		_t_4 = 8 * Delta;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_3 *= ell;
		_t_4 *= ell;
		_t_0 -= _t_2;
		_t_3 *= ell;
		_t_4 *= epsilon;
		_t_1 = 16 * Delta;
		_t_0 += _t_3;
		_t_4 *= epsilon;
		_t_1 *= ell;
		_t_2 = 64 * Delta;
		_t_0 -= _t_4;
		_t_1 *= epsilon;
		_t_2 *= epsilon;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_1 = 348 * Delta;
		_t_3 = 8 * S;
		_t_0 -= _t_2;
		_t_1 *= epsilon;
		_t_3 *= ell;
		_t_0 += _t_1;
		_t_1 = 440 * Delta;
		_t_3 *= ell;
		_t_2 = 44 * S;
		_t_4 = 16 * S;
		_t_0 -= _t_1;
		_t_3 *= epsilon;
		_t_2 *= ell;
		_t_4 *= ell;
		_t_0 -= _t_3;
		_t_2 *= ell;
		_t_4 *= epsilon;
		_t_1 = 88 * S;
		_t_0 += _t_2;
		_t_4 *= epsilon;
		_t_1 *= ell;
		_t_2 = 192 * S;
		_t_0 -= _t_4;
		_t_1 *= epsilon;
		_t_2 *= epsilon;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_1 = 1536 * S;
		_t_0 -= _t_2;
		_t_1 *= epsilon;
		_t_2 = 16 * P;
		_t_0 += _t_1;
		_t_1 = 2640 * S;
		_t_2 *= epsilon;
		_t_0 -= _t_1;
		_t_2 *= epsilon;
		_t_1 = 136 * P;
		_t_0 -= _t_2;
		_t_1 *= epsilon;
		_t_2 = 12 * ell;
		_t_0 += _t_1;
		_t_1 = 264 * P;
		_t_2 *= ell;
		_t_0 -= _t_1;
		_t_2 *= epsilon;
		_t_1 = 24 * ell;
		_t_3 = 24 * ell;
		_t_0 += _t_2;
		_t_1 *= ell;
		_t_3 *= epsilon;
		_t_0 -= _t_1;
		_t_3 *= epsilon;
		_t_1 = 48 * ell;
		_t_0 += _t_3;
		_t_1 *= epsilon;
		_t_2 = 120 * epsilon;
		_t_0 -= _t_1;
		_t_2 *= epsilon;
		_t_0 += _t_2;
		_t_1 = 540 * epsilon;
		_t_0 -= _t_1;
		a.get(6, 0) = _t_0 + 600;
		_t_0 = 2 * Delta;
		_t_1 = 40 * Delta;
		_t_0 *= Delta;
		_t_1 *= Delta;
		_t_2 = 14 * Delta;
		_t_0 *= Delta;
		_t_1 *= S;
		_t_2 *= Delta;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_1 = 46 * Delta;
		_t_3 = 112 * Delta;
		_t_0 += _t_2;
		_t_1 *= Delta;
		_t_3 *= S;
		_t_0 -= _t_1;
		_t_3 *= epsilon;
		_t_1 = 512 * Delta;
		_t_0 += _t_3;
		_t_1 *= S;
		_t_2 = 16 * Delta;
		_t_3 = 2 * Delta;
		_t_0 -= _t_1;
		_t_2 *= P;
		_t_3 *= ell;
		_t_1 = 4 * Delta;
		_t_0 -= _t_2;
		_t_3 *= ell;
		_t_1 *= ell;
		_t_2 = 12 * Delta;
		_t_0 -= _t_3;
		_t_1 *= epsilon;
		_t_2 *= epsilon;
		_t_0 -= _t_1;
		_t_2 *= epsilon;
		_t_1 = 140 * Delta;
		_t_0 += _t_2;
		_t_1 *= epsilon;
		_t_2 = 8 * S;
		_t_0 -= _t_1;
		_t_1 = 278 * Delta;
		_t_2 *= ell;
		_t_3 = 16 * S;
		_t_0 += _t_1;
		_t_2 *= ell;
		_t_3 *= ell;
		_t_1 = 32 * S;
		_t_0 -= _t_2;
		_t_3 *= epsilon;
		_t_1 *= epsilon;
		_t_0 -= _t_3;
		_t_1 *= epsilon;
		_t_2 = 544 * S;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_0 -= _t_2;
		_t_1 = 1448 * S;
		_t_2 = 24 * P;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_1 = 2 * ell;
		_t_0 -= _t_2;
		_t_2 = 92 * P;
		_t_1 *= ell;
		_t_0 += _t_2;
		_t_1 *= epsilon;
		_t_2 = 10 * ell;
		_t_3 = 4 * ell;
		_t_0 -= _t_1;
		_t_2 *= ell;
		_t_3 *= epsilon;
		_t_0 += _t_2;
		_t_3 *= epsilon;
		_t_1 = 20 * ell;
		_t_0 -= _t_3;
		_t_1 *= epsilon;
		_t_2 = 44 * epsilon;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_0 -= _t_2;
		_t_1 = 318 * epsilon;
		_t_0 += _t_1;
		a.get(6, 1) = _t_0 - 490;
		_t_0 = 5 * Delta;
		_t_1 = 48 * Delta;
		_t_0 *= Delta;
		_t_1 *= S;
		_t_2 = 14 * Delta;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_0 += _t_2;
		_t_1 = 58 * Delta;
		_t_2 = 48 * S;
		_t_0 -= _t_1;
		_t_2 *= epsilon;
		_t_0 += _t_2;
		_t_1 = 264 * S;
		_t_0 -= _t_1;
		_t_1 = 8 * P;
		_t_0 -= _t_1;
		_t_1 = ell * ell;
		_t_2 = 2 * ell;
		_t_0 -= _t_1;
		_t_2 *= epsilon;
		_t_1 = 4 * epsilon;
		_t_0 -= _t_2;
		_t_1 *= epsilon;
		_t_0 += _t_1;
		_t_1 = 62 * epsilon;
		_t_0 -= _t_1;
		a.get(6, 2) = _t_0 + 149;
		_t_0 = 4 * Delta;
		_t_1 = 16 * S;
		_t_0 += _t_1;
		_t_1 = 4 * epsilon;
		_t_0 += _t_1;
		a.get(6, 3) = _t_0 - 20;
		a.get(6, 4) = 1;
		_t_0 = 2 * Delta;
		_t_0 -= 7;
		_t_1 = 2 * epsilon;
		_t_2 = -Delta;
		_t_0 = -_t_0;
		_t_1 -= 5;
		_t_2 += ell;
		_t_3 = Delta + ell;
		_t_4 = 2 * epsilon;
		_t_0 *= _t_1;
		_t_2 += 6;
		_t_3 += _t_4;
		_t_0 *= _t_2;
		_t_3 -= 6;
		a.get(7, 0) = _t_0 * _t_3;
		_t_0 = -Delta;
		_t_1 = 6 * Delta;
		_t_0 *= Delta;
		_t_1 *= epsilon;
		_t_0 -= _t_1;
		_t_1 = 22 * Delta;
		_t_0 += _t_1;
		_t_1 = ell * ell;
		_t_2 = 2 * ell;
		_t_0 += _t_1;
		_t_2 *= epsilon;
		_t_1 = Delta + epsilon;
		_t_0 += _t_2;
		_t_2 = 26 * epsilon;
		_t_1 -= 6;
		_t_0 += _t_2;
		_t_1 *= (-2);
		_t_0 -= 71;
		a.get(7, 1) = _t_1 * _t_0;
		_t_0 = 5 * Delta;
		_t_1 = 14 * Delta;
		_t_0 *= Delta;
		_t_1 *= epsilon;
		_t_0 += _t_1;
		_t_1 = 70 * Delta;
		_t_0 -= _t_1;
		_t_1 = ell * ell;
		_t_2 = 2 * ell;
		_t_0 -= _t_1;
		_t_2 *= epsilon;
		_t_1 = 4 * epsilon;
		_t_0 -= _t_2;
		_t_1 *= epsilon;
		_t_0 += _t_1;
		_t_1 = 74 * epsilon;
		_t_0 -= _t_1;
		a.get(7, 2) = _t_0 + 215;
		_t_0 = 4 * Delta;
		_t_1 = 4 * epsilon;
		_t_0 += _t_1;
		a.get(7, 3) = _t_0 - 24;
		a.get(7, 4) = 1;
		return a;
	}
}  // namespace qboot

#endif  // HOR_FORMULA_H
